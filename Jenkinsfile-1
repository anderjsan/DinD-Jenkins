pipeline {
  agent any
  options {
    buildDiscarder(logRotator(numToKeepStr: '5'))
  }
  environment {
    SONAR_SCANNER_HOME = tool 'SonarScanner' // Verifique se 'SonarScanner' é o nome configurado na instalação de ferramentas globais
  }
  stages {
    stage('Setup') {
      steps {
        // Instalação das dependências do projeto
        sh 'pip install -r requirements.txt' 
      }
    }
    stage('Test') {
      steps {
        // Execução dos testes unitários
        sh 'python -m unittest discover'
      }
    }
    stage('Scan') {
      steps {
        // Execução da análise estática com SonarQube
        script {
          withSonarQubeEnv('sq1') {
            sh """
              ${env.SONAR_SCANNER_HOME}/bin/sonar-scanner \
                -Dsonar.projectKey=DinD-Jenkins \
                -Dsonar.sources=. \
                -Dsonar.host.url=http://sonarqube-svr:9000 \
                -Dsonar.token=sqp_b7075335c074d7a96e360dadbe032e9c2986114a
            """
          }
        }
      }
    }
  }
  post {
    always {
      // Verifica se o ambiente virtual Python está ativado antes de tentar desativá-lo
      script {
        def result = sh(returnStatus: true, script: 'python -c "import sys; print(sys.prefix)"')
        if (result == 0) {
          sh 'deactivate'
        } else {
          echo 'Ambiente virtual Python não está ativado. Não é necessário desativar.'
        }
      }
    }
  }
}
